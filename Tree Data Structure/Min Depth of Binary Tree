/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int Solution::minDepth(TreeNode* A) {
    if(A == NULL) return 0;
    queue <TreeNode*> q;
    q.push(A);
    int min_depth = 0;
    TreeNode* temp = A;
    while(q.empty() == false){
        TreeNode* node = q.front();
        min_depth++;
        int q_size = q.size();
        for(int i=0; i<q_size; i++){
                temp = q.front();
                if(temp->left == NULL && temp->right == NULL){
                    return min_depth;
                }
                if(temp->left)  q.push(temp->left);
                if(temp->right) q.push(temp->right);
                q.pop();
        }
        
    }
    return min_depth;
}
